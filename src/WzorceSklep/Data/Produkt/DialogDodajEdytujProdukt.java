/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package WzorceSklep.Data.Produkt;

import WzorceSklep.DAOFactory;
import WzorceSklep.GUI.Admin;
import WzorceSklep.GUI.RefreshableJFrame;
import WzorceSklep.Util;

import javax.swing.*;
import java.awt.*;
import java.math.BigDecimal;
import java.sql.SQLException;

/**
 *
 * @author Karolina
 */
public class DialogDodajEdytujProdukt extends JDialog {

    private final Akcja akcja;
    private final DAOFactory daoFactory;
    private Produkt produkt;

    public enum Akcja
    {
        DODAJ,
        EDYTUJ
    }
    public final String NAZWA_PLACEHOLDER;
    public final String CENA_PLACEHOLDER;
    public final String TYP_PLACEHOLDER;
    public final String ILOSC_PLACEHOLDER;

    /**
     * Tworzy dialog do dodawania produktu.
     */
    private DialogDodajEdytujProdukt(Frame parent, DAOFactory daoFactory) {
        super(parent, true);
        this.daoFactory = daoFactory;
        this.akcja = Akcja.DODAJ;
        initComponents();
        wypelnijPola.setVisible(false);
        usunButton.setVisible(false);
        titleLabel.setText("Dodawanie nowego produktu");
        utworz.setText("Zapisz");
        NAZWA_PLACEHOLDER = "Nazwa";
        CENA_PLACEHOLDER = "Cena";
        TYP_PLACEHOLDER = "Typ";
        ILOSC_PLACEHOLDER = "Ilosc";
    }

    private DialogDodajEdytujProdukt(Frame parent, DAOFactory daoFactory, int idPracownika)
    {
        super(parent, true);
        initComponents();
        wypelnijPola.setVisible(false);
        titleLabel.setText("Edytowanie danych produktu");
        utworz.setText("Zapisz");
        this.daoFactory = daoFactory;
        akcja = Akcja.EDYTUJ;
        produkt = getProduktForomID(idPracownika);
        NAZWA_PLACEHOLDER = "";
        CENA_PLACEHOLDER = "";
        TYP_PLACEHOLDER = "";
        ILOSC_PLACEHOLDER = "";

        nazwaField.setText(produkt.nazwa);
        cenaField.setText(produkt.cena.toPlainString());
        typField.setText(produkt.typ);
        iloscField.setText(String.valueOf(produkt.ilosc));
        specyfikacjaField.setText(produkt.specyfikacja);
    }

    private Produkt getProduktForomID(int idPracownika) {
        try {
            return daoFactory.getProduktDAO().getById(idPracownika);
        } catch (SQLException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
            Util.showErrorDialog(this, e);
            return new Produkt();
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        iloscField = new javax.swing.JTextField();
        typField = new javax.swing.JTextField();
        wypelnijPola = new javax.swing.JLabel();
        cenaField = new javax.swing.JTextField();
        nazwaField = new javax.swing.JTextField();
        utworz = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        specyfikacjaField = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        usunButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Vijaya", 0, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Dodawanie nowego produktu");

        iloscField.setText("Ilosc");
        iloscField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                iloscFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                iloscFieldFocusLost(evt);
            }
        });

        typField.setText("Typ");
        typField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                typFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                typFieldFocusLost(evt);
            }
        });

        wypelnijPola.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        wypelnijPola.setForeground(new java.awt.Color(255, 0, 0));
        wypelnijPola.setText("Niepoprawne lub niekompletne dane - popraw!");

        cenaField.setText("Cena");
        cenaField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cenaFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cenaFieldFocusLost(evt);
            }
        });

        nazwaField.setText("Nazwa");
        nazwaField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nazwaFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nazwaFieldFocusLost(evt);
            }
        });

        utworz.setText("Zapisz");
        utworz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utworzActionPerformed(evt);
            }
        });

        specyfikacjaField.setColumns(20);
        specyfikacjaField.setRows(5);
        jScrollPane1.setViewportView(specyfikacjaField);

        jLabel1.setText("Opis");

        usunButton.setText("Kasuj");
        usunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usunButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nazwaField)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(typField, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cenaField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iloscField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(wypelnijPola))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(utworz, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usunButton, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nazwaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cenaField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iloscField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(wypelnijPola)
                        .addGap(16, 16, 16)
                        .addComponent(usunButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(utworz))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iloscFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_iloscFieldFocusGained
        iloscField.selectAll();
    }//GEN-LAST:event_iloscFieldFocusGained

    private void iloscFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_iloscFieldFocusLost
        if (iloscField.getText().equals("")) {
            iloscField.setText(ILOSC_PLACEHOLDER);
        }
    }//GEN-LAST:event_iloscFieldFocusLost

    private void typFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typFieldFocusGained
        typField.selectAll();
    }//GEN-LAST:event_typFieldFocusGained

    private void typFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typFieldFocusLost
        if (typField.getText().equals("")) {
            typField.setText(TYP_PLACEHOLDER);
        }
    }//GEN-LAST:event_typFieldFocusLost

    private void cenaFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cenaFieldFocusGained
        cenaField.selectAll();
    }//GEN-LAST:event_cenaFieldFocusGained

    private void cenaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cenaFieldFocusLost
        if (cenaField.getText().equals("")) {
            cenaField.setText(CENA_PLACEHOLDER);
        }
    }//GEN-LAST:event_cenaFieldFocusLost

    private void nazwaFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nazwaFieldFocusGained
        nazwaField.selectAll();
    }//GEN-LAST:event_nazwaFieldFocusGained

    private void nazwaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nazwaFieldFocusLost
        if (nazwaField.getText().equals("")) {
            nazwaField.setText(NAZWA_PLACEHOLDER);
        }
    }//GEN-LAST:event_nazwaFieldFocusLost

    private void utworzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utworzActionPerformed

        wypelnijPola.setVisible(false);

        boolean sukces;
        switch (akcja)
        {
            case DODAJ:
                sukces = utworzProdukt();
                break;
            case EDYTUJ:
                sukces = updateProdukt();
                break;
            default:
                sukces=false;
        }
        if (!sukces){
            wypelnijPola.setVisible(true);
            return;
        }
        dispose();
      
/*        try {
            CallableStatement proc = connection.prepareCall("{call DodajProdukt(?, ?, ?, ?, ?)}");
                proc.setString(1, typ);
                proc.setString(2, specyfikacja);
                proc.setString(3, nazwa);
                proc.setInt(4, cena);
                proc.setInt(5, ilosc);
            proc.execute();
            proc.close();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {*/
//        }
    }//GEN-LAST:event_utworzActionPerformed

    private void usunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usunButtonActionPerformed
        usunProdukt();
    }//GEN-LAST:event_usunButtonActionPerformed

    private void usunProdukt() {
        if(JOptionPane.showConfirmDialog(this, "Czy na pewno chcesz usunąć " + produkt.nazwa)==JOptionPane.YES_OPTION)
            try {
                daoFactory.getProduktDAO().delete(produkt.ID);
                dispose();
            } catch (SQLException e) {
                e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
                Util.showErrorDialog(this, e);
            }
    }

    private boolean updateProdukt() {
        if(nieWypelnione()) return false;
        produkt.typ = typField.getText();
        produkt.specyfikacja = specyfikacjaField.getText();
        produkt.nazwa = nazwaField.getText();

        try {
            produkt.cena = new BigDecimal(cenaField.getText());
            produkt.ilosc = new Integer(iloscField.getText());
            DAOFactory.getProduktyDAO().update(produkt);
        } catch (SQLException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
            wypelnijPola.setVisible(true);
            return false;
        }
        return true;
    }

    private boolean utworzProdukt() {
        if(nieWypelnione()) return false;
        produkt = new Produkt();

        produkt.typ = typField.getText();
        produkt.specyfikacja = specyfikacjaField.getText();
        produkt.nazwa = nazwaField.getText();

        try {
            produkt.cena = new BigDecimal(cenaField.getText());
            produkt.ilosc = new Integer(iloscField.getText());
            DAOFactory.getProduktyDAO().insert(produkt);
        } catch (SQLException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
            wypelnijPola.setVisible(true);
            return false;
        }
        return true;
    }

    private boolean nieWypelnione() {
        return typField.getText().equals(TYP_PLACEHOLDER) || nazwaField.getText().equals(NAZWA_PLACEHOLDER) || cenaField.getText().equals(CENA_PLACEHOLDER) || iloscField.getText().equals(ILOSC_PLACEHOLDER);
    }

    public static void showDialogDodaj(final Admin parent, final DAOFactory daoFactory) {

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DialogDodajEdytujProdukt dialog = new DialogDodajEdytujProdukt(parent, daoFactory);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosed(java.awt.event.WindowEvent e) {
                        parent.refreshCurrentWindow();
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public static void showEdytujDialog(final RefreshableJFrame parent, final DAOFactory daoFactory, final Integer idPracownika)
    {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DialogDodajEdytujProdukt dialog = new DialogDodajEdytujProdukt(parent, daoFactory, idPracownika);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosed(java.awt.event.WindowEvent e) {
                        parent.refreshCurrentWindow();
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cenaField;
    private javax.swing.JTextField iloscField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nazwaField;
    private javax.swing.JTextArea specyfikacjaField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField typField;
    private javax.swing.JButton usunButton;
    private javax.swing.JButton utworz;
    private javax.swing.JLabel wypelnijPola;
    // End of variables declaration//GEN-END:variables
}
